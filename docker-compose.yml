version: "3.2"
services:
  minio:
    image: bitnami/minio
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: IgorTosta
      MINIO_ROOT_PASSWORD: igortosta
      MINIO_SERVER_HOST: minio
      MINIO_SCHEME: http
      MINIO_API_CORS_ALLOW_ORIGIN: "*"
  mc:
    image: minio/mc
    container_name: mc
    network_mode: host
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add --api s3v2 minio http://192.168.0.110:9000/ IgorTosta igortosta;
      /usr/bin/mc rm -r --force minio/first-bucket;
      /usr/bin/mc mb -p minio/first-bucket;
      /usr/bin/mc policy set public minio/first-bucket;
      /usr/bin/mc admin trace minio -a --debug;
      "
  mongodb: 
    image: mongo:latest
    container_name: 'mongodb'
    ports:
      - 27017:27017
  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
  backend:
    restart: always
    build:
      context: ./api
    volumes:
      - .:/api
    depends_on:
      - rabbitmq
      - mongodb
      - minio
    environment:
      PORT: 4000
      AMQP_URL: amqp://guest:guest@rabbitmq:5672
      MONGO_URL: mongodb://mongodb:27017/mydb_development
      ACCESS_TOKEN_SECRET: accesstoken
      BUCKET_HOST: http://192.168.3.11:9000/
      BUCKET_ENDPOINT: http://minio:9000/
      BUCKET_ACCESS_KEY: IgorTosta
      BUCKET_SECRET_KEY: igortosta
    ports:
      - 4000:4000
  frontend:
    build:
      context: ./frontend
    volumes:
      - .:/frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend